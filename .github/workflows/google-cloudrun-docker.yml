name: 'Build and Deploy to Cloud Run'

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GSP_PROJECT_ID }} # ID du projet Google Cloud
  CREDENTIALS: ${{ secrets.GSP_SA_KEY }} # Clé du compte de service Google Cloud
  REGION: ${{ secrets.GSP_REGION }} # Région
  GAR_NAME: gh-projet7 # Nom de votre registre Artifact
  SERVICE: githubactions # Nom du service Cloud Run

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run API tests
      run: |
        pytest tests/test_model.py
      continue-on-error: false # Assure que le job échoue si les tests échouent

  deploy:
    runs-on: ubuntu-latest
    needs: build # Dépend du job build, donc il ne sera exécuté que si build réussit

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ env.CREDENTIALS }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: 'latest'
          project_id: ${{ env.PROJECT_ID }}

      - name: Docker Auth
        run: |
          gcloud auth configure-docker "${{ env.REGION }}-docker.pkg.dev"

      - name: Build and Push Container
        run: |
          DOCKER_TAG="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/app:${{ github.sha }}"
          docker build --tag "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE }} \
            --image ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/app:${{ github.sha }} \
            --region ${{ env.REGION }} \
            --format json \
            --verbosity=debug

      - name: Show output
        run: |
          echo ${{ steps.deploy.outputs.url }}
